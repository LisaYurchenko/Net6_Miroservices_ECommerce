services:
  basket.api:
    build:
      context: C:\Users\amoskalets\Documents\GitHub\Net6_Miroservices_ECommerce\src
      dockerfile: Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      redis:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: basketapi
    ports:
    - published: 5002
      target: 80
    - published: 5003
      target: 443
  catalog.api:
    build:
      context: C:\Users\amoskalets\Documents\GitHub\Net6_Miroservices_ECommerce\src
      dockerfile: Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DatabaseSettings:ConnectionString: mongodb://admin:admin@catalogdb:27017
    image: catalogapi
    ports:
    - published: 5000
      target: 80
    - published: 5001
      target: 443
    volumes:
    - C:\Users\amoskalets\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\amoskalets\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  catalogdb:
    container_name: catalogdb
    environment:
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_ROOT_USERNAME: admin
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - catalogdb_data:/data/db:rw
  redis:
    container_name: redis
    environment:
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_ROOT_USERNAME: admin
    image: bitnami/redis
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - catalogdb_data:/data/db:rw
version: '3.4'
volumes:
  catalogdb_data: {}